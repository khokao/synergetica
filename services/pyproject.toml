[project]
name = "magesty"
version = "0.0.0"
description = "Genetic circuit design desktop app"
authors = [
    { name = "Koki Hokao" },
    { name = "Kanta Suga" },
]
requires-python = ">=3.12,<3.13"

dependencies = [
    "aiomultiprocess>=0.9.1",
    "datasets>=3.1.0",
    "fastapi[standard]>=0.115.5",
    "torch>=2.5.1",
    "lightning>=2.4.0",
    "loguru>=0.7.2",
    "numpy>=2.0.0",
    "omegaconf>=2.3.0",
    "pydantic>=2.10.2",
    "scipy>=1.14.1",
    "tokenizers>=0.21.0",
    "torchmetrics>=1.6.0",
    "transformers>=4.17.0",
]

[tool.uv.sources]
torch = [
    { index = "pytorch-cpu", marker = "platform_system != 'Darwin' and platform_machine == 'x86_64'" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[project.optional-dependencies]
dev = [
    # ML Training
    "hydra-core>=1.3.2",
    "tensorboardx>=2.6.2.2",

    # Test
    "coverage[toml]>=7.6.8",
    "pytest-asyncio>=0.24.0",
    "pytest>=8.3.3",
    "pytest-cov>=6.0.0",

    # Lint
    "ruff>=0.8.1",

    # Types
    "mypy>=1.13.0",

    # Docs
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.47",
]

[tool.ruff]
line-length = 120

exclude = [
    "*/__init__.py",
]

[tool.ruff.lint]
# All rules are listed on https://docs.astral.sh/ruff/rules/
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]

[tool.ruff.lint.isort]
known-first-party = ["api"]
known-third-party = ["datasets"]

[tool.ruff.format]
quote-style = "single"

[tool.mypy]
plugins = ["numpy.typing.mypy_plugin"]
files = ["src/", "tests/"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = true
pretty = false  # To display reviewdog's comments correctly
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "datasets.*"
follow_imports = "skip"
disallow_any_unimported = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = "tests"
console_output_style = "progress"
asyncio_default_fixture_loop_scope = "function"

addopts = [
    "--cov",
    "--cov-report=term-missing:skip-covered",
]

filterwarnings = [
    "ignore:.*GPU available but not used.*"
]

[tool.coverage.run]
parallel = true
data_file = "coverage/.coverage"
source = ["src/"]
omit = []
context = '${CONTEXT}'

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    'if __name__ == "__main__":',
    "if TYPE_CHECKING:",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/api"]
