[tool.poetry]
name = "gene-circuit-ide-python"
version = "0.0.0"
description = "Python API for Gene Circuit IDE"
authors = ["Koki Hokao", "Kanta Suga", "Sota Okuda"]
license = "MIT"
readme = "README.md"
packages = [
    { include = "common"},
    { include = "generator"},
    { include = "simulator"},
]

[tool.poetry.dependencies]
python = ">=3.12,<4"
aiomultiprocess = "*"
bitsandbytes = "<0.43"  # cannot install 0.43
datasets = "*"
einops = "*"
fastapi = "*"
fastapi-cli = "*"
httpx = "*"
hydra-core = "*"
lightning= { version = "*", extras = ["extra"] }
loguru = "*"
numpy = "^1.0.0"
omegaconf = "^2.3.0"
polars = "*"
pydantic = "*"
scipy = "^1.14.0"
scikit-learn = "*"
tensorboard = "*"
tokenizers = "*"
torch = [
    { version = ">=1.12+cpu", markers = "sys_platform == 'darwin'" },
    # { version = ">=1.12+cu121", markers = "sys_platform == 'linux'" },
]
torchmetrics = "*"
transformers = "*"
typer = "*"


[tool.poetry.group.dev.dependencies]
coverage = { version = "*", extras = ["toml"] }
jupyterlab = "^4.2.3"
matplotlib = "^3.9.0"
mypy = "*"
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
ruff = "*"

[tool.ruff]
line-length = 120

exclude = [
    "*/__init__.py",
]

[tool.ruff.lint]
# All rules are listed on https://docs.astral.sh/ruff/rules/
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]

[tool.ruff.lint.isort]
known-first-party = ["common", "generator", "simulator"]
known-third-party = ["datasets"]

[tool.ruff.format]
quote-style = "single"

[tool.mypy]
plugins = ["numpy.typing.mypy_plugin"]
files = ["common/", "generator/", "simulator/", "tests/"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = true
pretty = false  # To display reviewdog's comments correctly
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "datasets.*"
follow_imports = "skip"
disallow_any_unimported = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = "tests"
console_output_style = "progress"
asyncio_default_fixture_loop_scope = "function"

addopts = [
    "--cov",
    "--cov-report=term-missing:skip-covered",
]

filterwarnings = [
    "ignore:.*GPU available but not used.*"
]

[tool.coverage.run]
parallel = true
data_file = "coverage/.coverage"
source = ["common", "generator/", "simulator"]
omit = []
context = '${CONTEXT}'

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    'if __name__ == "__main__":',
    "if TYPE_CHECKING:",
]

[build-system]
requires = ["poetry"]
build-backend = "poetry.masonry.api"
